# ANF-AIOps Nginx Configuration
# Author: Dwiref Sharma <DwirefS@SapientEdge.io>
# Reverse proxy and load balancer for ANF-AIOps services

worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Upstream definitions
    upstream mcp_backend {
        least_conn;
        server mcp-server:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream teams_bot_backend {
        least_conn;
        server teams-bot:3978 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream rag_backend {
        least_conn;
        server rag-system:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream functions_backend {
        least_conn;
        server azure-functions:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Default server (catch-all)
    server {
        listen 80 default_server;
        server_name _;
        return 444;
    }

    # Main server configuration
    server {
        listen 80;
        server_name anf-aiops.local localhost;

        # Redirect to HTTPS in production
        # return 301 https://$server_name$request_uri;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # MCP Server API
        location /api/mcp/ {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://mcp_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Headers for WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Teams Bot API
        location /api/messages {
            limit_req zone=api burst=50 nodelay;

            proxy_pass http://teams_bot_backend/api/messages;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # RAG System API
        location /api/rag/ {
            limit_req zone=api burst=10 nodelay;

            proxy_pass http://rag_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeout for RAG operations
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Azure Functions API
        location /api/functions/ {
            limit_req zone=api burst=30 nodelay;

            proxy_pass http://functions_backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Static files (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Monitoring endpoints (restrict access)
        location /metrics {
            allow 172.20.0.0/16;  # Docker network
            allow 127.0.0.1;
            deny all;
            
            proxy_pass http://mcp_backend/metrics;
            proxy_set_header Host $host;
        }

        # Admin panel (restrict access)
        location /admin/ {
            allow 172.20.0.0/16;  # Docker network
            allow 127.0.0.1;
            deny all;
            
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://mcp_backend/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/error;
            internal;
        }
        
        location = /50x.html {
            root /var/www/error;
            internal;
        }
    }

    # HTTPS server configuration (production)
    server {
        listen 443 ssl http2;
        server_name anf-aiops.domain.com;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/anf-aiops.crt;
        ssl_certificate_key /etc/nginx/ssl/anf-aiops.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Include the same location blocks as the HTTP server
        include /etc/nginx/conf.d/locations.conf;
    }
}