# Dependency Vulnerability Check Workflow
# Author: Dwiref Sharma <DwirefS@SapientEdge.io>
name: Dependency Check

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  push:
    branches: [ main, develop ]
    paths:
      - '**/package.json'
      - '**/package-lock.json'
      - '**/*.csproj'
      - '**/requirements.txt'
      - '**/go.mod'
      - '**/pom.xml'
      - '**/Gemfile'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  # .NET Dependencies
  dotnet-dependencies:
    name: .NET Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: |
          cd functions/ANFServer
          dotnet restore

      - name: Check for vulnerable packages
        run: |
          cd functions/ANFServer
          dotnet list package --vulnerable --include-transitive > vulnerable-packages.txt
          
          if grep -q "has the following vulnerable packages" vulnerable-packages.txt; then
            echo "Vulnerable packages found:"
            cat vulnerable-packages.txt
            exit 1
          else
            echo "No vulnerable packages found"
          fi

      - name: Check for deprecated packages
        run: |
          cd functions/ANFServer
          dotnet list package --deprecated --include-transitive || true

      - name: Check for outdated packages
        run: |
          cd functions/ANFServer
          dotnet list package --outdated || true

      - name: Generate dependency report
        run: |
          cd functions/ANFServer
          dotnet list package --include-transitive > dotnet-dependencies.txt

      - name: Upload dependency report
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-dependency-report
          path: functions/ANFServer/dotnet-dependencies.txt

  # Node.js Dependencies
  nodejs-dependencies:
    name: Node.js Dependency Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - { name: 'RAG System', path: 'rag' }
          - { name: 'MCP Server', path: 'src/mcp-server' }
          - { name: 'Teams Bot', path: 'src/teams-bot' }
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: |
          cd ${{ matrix.project.path }}
          npm ci

      - name: Run npm audit
        id: npm_audit
        run: |
          cd ${{ matrix.project.path }}
          npm audit --json > npm-audit-report.json || true
          
          # Check for high or critical vulnerabilities
          if npm audit --audit-level=high; then
            echo "No high or critical vulnerabilities found"
          else
            echo "High or critical vulnerabilities detected!"
            npm audit
            exit 1
          fi

      - name: Check for outdated packages
        run: |
          cd ${{ matrix.project.path }}
          npm outdated || true

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=${{ matrix.project.path }}/package.json

      - name: Upload npm audit report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ matrix.project.name }}-npm-audit
          path: ${{ matrix.project.path }}/npm-audit-report.json

  # Python Dependencies (if any)
  python-dependencies:
    name: Python Dependency Check
    runs-on: ubuntu-latest
    if: false  # Enable if Python dependencies exist
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install safety pip-audit

      - name: Check for vulnerabilities with Safety
        run: |
          safety check --json > safety-report.json || true

      - name: Check with pip-audit
        run: |
          pip-audit --desc > pip-audit-report.txt || true

  # License Compatibility Check
  license-check:
    name: License Compatibility Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install license-checker
        run: npm install -g license-checker

      - name: Check Node.js licenses
        run: |
          for dir in rag src/mcp-server src/teams-bot; do
            if [ -d "$dir" ]; then
              echo "Checking licenses in $dir"
              cd "$dir"
              license-checker --production --summary --failOn 'GPL-3.0;AGPL-3.0;LGPL-3.0' > "../$(basename $dir)-licenses.txt"
              cd -
            fi
          done

      - name: Check .NET licenses
        run: |
          cd functions/ANFServer
          dotnet tool install --global dotnet-project-licenses
          dotnet-project-licenses --input . --output licenses.json || true

      - name: Upload license reports
        uses: actions/upload-artifact@v3
        with:
          name: license-reports
          path: |
            *-licenses.txt
            functions/ANFServer/licenses.json

  # Supply Chain Security
  supply-chain-security:
    name: Supply Chain Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate SBOM for .NET
        run: |
          cd functions/ANFServer
          dotnet tool install --global sbom-tool
          sbom-tool generate -b . -pn ANFServer -pv 1.0.0 -ps "SapientEdge" -nsb https://sapientedge.io

      - name: Generate SBOM for Node.js projects
        run: |
          npm install -g @cyclonedx/bom
          for dir in rag src/mcp-server src/teams-bot; do
            if [ -d "$dir" ]; then
              cd "$dir"
              cyclonedx-bom -o "../$(basename $dir)-sbom.json"
              cd -
            fi
          done

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sbom-reports
          path: |
            *-sbom.json
            functions/ANFServer/_manifest/

  # Dependency Update PRs
  create-update-prs:
    name: Create Dependency Update PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && github.ref == 'refs/heads/main'
    needs: [dotnet-dependencies, nodejs-dependencies, license-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Update Node.js dependencies
        run: |
          for dir in rag src/mcp-server src/teams-bot; do
            if [ -d "$dir" ]; then
              cd "$dir"
              npm update --save
              npm audit fix || true
              cd -
            fi
          done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'Automated Dependency Updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates based on the weekly security scan.
            
            ### Changes
            - Updated Node.js dependencies to latest compatible versions
            - Applied available security patches via npm audit fix
            
            ### Testing Required
            - [ ] Run full test suite
            - [ ] Verify no breaking changes
            - [ ] Check application functionality
            
            Generated by: Dependency Check Workflow
            Author: Dwiref Sharma <DwirefS@SapientEdge.io>
          branch: deps/automated-updates
          delete-branch: true

  # Generate Dependency Report
  dependency-report:
    name: Generate Dependency Report
    runs-on: ubuntu-latest
    needs: [dotnet-dependencies, nodejs-dependencies, license-check, supply-chain-security]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate consolidated report
        run: |
          mkdir -p dependency-reports
          echo "# Dependency Analysis Report" > dependency-reports/DEPENDENCY_REPORT.md
          echo "Generated on: $(date)" >> dependency-reports/DEPENDENCY_REPORT.md
          echo "Repository: ${{ github.repository }}" >> dependency-reports/DEPENDENCY_REPORT.md
          echo "" >> dependency-reports/DEPENDENCY_REPORT.md
          
          echo "## Check Results" >> dependency-reports/DEPENDENCY_REPORT.md
          echo "- .NET Dependencies: ${{ needs.dotnet-dependencies.result }}" >> dependency-reports/DEPENDENCY_REPORT.md
          echo "- Node.js Dependencies: ${{ needs.nodejs-dependencies.result }}" >> dependency-reports/DEPENDENCY_REPORT.md
          echo "- License Check: ${{ needs.license-check.result }}" >> dependency-reports/DEPENDENCY_REPORT.md
          echo "- Supply Chain Security: ${{ needs.supply-chain-security.result }}" >> dependency-reports/DEPENDENCY_REPORT.md
          
          # Add vulnerability summary
          echo "" >> dependency-reports/DEPENDENCY_REPORT.md
          echo "## Vulnerability Summary" >> dependency-reports/DEPENDENCY_REPORT.md
          echo "See individual reports for detailed vulnerability information." >> dependency-reports/DEPENDENCY_REPORT.md

      - name: Upload dependency report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-analysis-report
          path: dependency-reports/

      - name: Notify if vulnerabilities found
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: |
            Dependency vulnerabilities detected! 🚨
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref }}
            Please review the dependency report for details.
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_SECURITY }}